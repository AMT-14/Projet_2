openapi: '3.0.3'
info:
  version: '0.2.0'
  title: Gamification
  description: we're trying to make it work
security:
  # - bearerAuth: []
  - apiKeyAuth: []
paths:
  /scoreScales:
    post:
      description: Register a score scale for a specifique api
      operationId: createScoreScale
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ScoreScale'
      responses:
        '201':
          description: score scale created
  /scoreScales/{id}:
    get:
      description: Get the score corresponding to the id for a specifique api
      operationId: getScoreScale
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      security:
       - ApiKeyAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ScoreScale'
      responses:
        '200':
          description: scoreScale successfully provided
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ScoreScale'
  /applications:
    post:
      description: register an application
      operationId: registerApplication
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: Application registered successfully
          content:
            'application/json':
              schema:
               type: UUID

 /rules:
   post:
     description: create a new rule
     operationId: createRule
     requestBody:
       content:
         'application/json':
           schema:
             $ref: '#/components/schemas/Rule'
     responses:
       '200':
         description: new rule creation success
         content:
           'application/json':
             schema:
               $ref: '#/components/schemas/Rule'


   /score:
    post:
      description: create score
      operationId: createScore
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Score'
      responses:
        '201':
          description: updated
  /score/{id}:
    get:
      description: get the score
      operationId: getScore
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
            description: success
            content:
              'application/json':
                schema:
                    $ref: '#/components/schemas/Score'
components:
  securitySchemes:
    # bearerAuth:            # arbitrary name for the security scheme
    #  type: http
    #  scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #  bearerFormat: JWT    # optional, arbitrary value for documentation purposes

    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Application:
      type: object
      properties:
        name:
          type: string
    Rule:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        event:
          type: string
        badgeName:
          type: string
        scoreScaleId:
          type: integer
        scoreToAdd:
          type: integer


    ScoreScale:
      type: object
      properties:
        name:
          type: string
    Score:
      type: object
      properties:
        value:
          type: Integer